"""add_measurement_method_to_test_settings

Revision ID: d881b9a8ebe8
Revises: c4fb5e4593db
Create Date: 2025-09-15 01:34:39.948809

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd881b9a8ebe8'
down_revision: Union[str, None] = 'c4fb5e4593db'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN, so we'll skip the device_type change
    # op.alter_column('devices', 'device_type',
    #            existing_type=sa.VARCHAR(length=18),
    #            type_=sa.Enum('POWER_METER', 'SAFETY_TESTER', 'BARCODE_SCANNER', name='devicetype'),
    #            existing_nullable=False)
    op.add_column('test_settings', sa.Column('measurement_method', sa.String(length=20), nullable=True, comment='측정 방식 (polling/synchronized)'))
    op.add_column('test_settings', sa.Column('data_collection_interval', sa.Float(), nullable=True, comment='데이터 수집 간격 (초)'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('test_settings', 'data_collection_interval')
    op.drop_column('test_settings', 'measurement_method')
    # SQLite doesn't support ALTER COLUMN, so we'll skip the device_type change
    # op.alter_column('devices', 'device_type',
    #            existing_type=sa.Enum('POWER_METER', 'SAFETY_TESTER', 'BARCODE_SCANNER', name='devicetype'),
    #            type_=sa.VARCHAR(length=18),
    #            existing_nullable=False)
    # ### end Alembic commands ###
